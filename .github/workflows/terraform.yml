name: Terraform

# on:
#   workflow_run:
#     workflows: ["Packer"]
#     branches:
#       - "main"
#     types:
#       - completed

on:
  push:
    branches:
      - "main"

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
    
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform -chdir=terraform/ init

      - name: Terraform Destroy
        id: destroy
        run: terraform -chdir=terraform/ destroy -auto-approve

      - name: Create SSH Directory
        run: mkdir -p ~/.ssh

      - name: Terraform Plan
        id: plan
        run: terraform -chdir=terraform/ plan
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_private_key: ${{ secrets.PRIVATE_KEY }}

      - name: Terraform Apply
        run: terraform -chdir=terraform/ apply -auto-approve
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          TF_VAR_private_key: ${{ secrets.PRIVATE_KEY }}
      
      - name: Get Instance IP
        id: instance_ip
        run: echo "::set-output name=ip::$(terraform -chdir=terraform/ output -raw instance_ip)"

      - name: Run Ansible Playbook
        run:
          "ansible-playbook -i ${{ steps.instance_ip.outputs.ip }} --private-key ${var.private_key} ansible/playbook.yaml"
        env:
          TF_VAR_private_key: ${{ secrets.PRIVATE_KEY }}